{"rule":"ITALIAN_WORD_REPEAT_RULE","sentence":"^\\QVediamone un'implementazione Implementazione del selection sort\\E$"}
{"rule":"ITALIAN_WORD_REPEAT_RULE","sentence":"^\\QVediamone un'implementazione Implementazione del selection sort Quali sono le complessità nei casi pessimo, medio e migliore?\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Scrivendo, ora, la funzione di ricorrenza come sommatoria otteniamo: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Applicazione proprietà dei logaritmi  \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Cambiamento di base \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QRestituisce true se la coda è vuota boolean isEmpty() Inserisce \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in fondo alla coda enqueue(ITEM v)\\E$"}
{"rule":"UNPAIRED_BRACKETS","sentence":"^\\Qenqueue(ITEM v) precondition:(curdim < maxdim) V[(head + curdim) mod maxdim] = v curdim = curdim + 1\\E$"}
{"rule":"ER_01_001","sentence":"^\\QOgni nodo della lista poi, a cascata, contiene un riferimento ad un proprio vertice adiacente\\E$"}
{"rule":"ER_01_001","sentence":"^\\QOgni nodo della lista poi, a cascata, contiene un riferimento ad un uno dei vertici ad esso adiacenti.\\E$"}
{"rule":"ER_01_001","sentence":"^\\QOgni nodo della lista poi, a cascata, contiene un riferimento ad un uno dei vertici che nel grafo sono adiacenti al vertice associato a quel nodo della lista.\\E$"}
{"rule":"UNPAIRED_BRACKETS","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QMontreson \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QSortremor \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Le due codifiche sono uguali quindi \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QMontresor\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Sortremor)=28 689\\E$"}
{"rule":"UNPAIRED_BRACKETS","sentence":"^\\Qpush(ITEM v) precondition:(cur < maxdim) cur = cur + 1 V[cur] = v In una pila implementata come lista non è necessario specificare una dimensione massima.\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\QUtilizzando le strutture dati viste finora possiamo calcolare i seguenti costi:  !\\E$"}
{"rule":"UNPAIRED_BRACKETS","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QMontreson \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QSontremor \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Le due codifiche sono uguali quindi \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QMontresor\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Sontremor)=28 689\\E$"}
{"rule":"UNPAIRED_BRACKETS","sentence":"^\\Qenqueue(ITEM v) precondition:(curdim < maxdim) V[(head + curdim) mod maxdim] = v curdim = curdim + 1 In una coda implementata come lista non è necessario specificare una dimensione massima.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QVediamo un esempio di utilizzo delle visite: DFS Pre-order: A B C D E F G; DFS In-order: C B D A F E G; DFS Post-order: C D B F G E A; BFS: A B E C D F G; [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Vettore dei figli] [Primo figlio, prossimo fratello] [Vettore dei padri] [main] (0) [yshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6); Memorizzazione di alberi generici\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Caso peggiore \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, scale=0.8] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (1) [below right of=0, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (2) [below right of=1, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (3) [below right of=2, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (4) [below right of=3, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (5) [below right of=4, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, scale=0.8] (6) [below right of=5, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (1) edge (2) (2) edge (3) (3) edge (4) (4) edge (5) (5) edge (6); [Caso migliore \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) [yshift=-107.5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6); Caso peggiore e caso migliore Da queste immagini risulta evidente che sia meglio evitare di lavorare con alberi troppo sbilanciati.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) edge[bend left=20] (2); [<-] (0) edge[bend right=20] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); Grafo orientato\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, line width=1.2pt] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, line width=1.2pt] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, line width=1.2pt] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, line width=1.2pt] (0) – (1); [->, line width=1.2pt] (0) edge[bend left=20] (2); [<-, line width=1.2pt] (0) edge[bend right=20] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1); (0) – (2); (1) – (3); (2) – (3); (2) – (4); (4) – (3); Grafo orientato\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1); (0) – (2); (1) – (3); (2) – (3); (2) – (4); (4) – (3); Grado dei nodi nei grafi orientati e non orientati\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) edge[bend left=20] (2); [<-] (0) edge[bend right=20] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); [Grafo non orientato]0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [line width=1.2pt] (0) – (1); [line width=1.2pt] (1) – (3); (2) – (3); [line width=1.2pt] (2) – (4); [line width=1.2pt] (4) – (3); La sequenza di nodi \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è un cammino di lunghezza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo non orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below of=3, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1); (0) – (2); (1) – (3); (2) – (3); (2) – (4); (4) – (3); [Matrice di adiacenza] [Lista di adiacenza] Memorizzazione di un grafo non orientato Giunti a questo punto possiamo dire che, a parità di metodo di memorizzazione scelto, lo spazio necessario per memorizzare un grafo orientato non è diverso da quello che servirebbe se il grafo fosse non orientato.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below of=3, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [<-] (0) edge[bend left=20] (2); [->] (0) edge[bend right=20] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); [Matrice di adiacenza] [Lista di adiacenza] Memorizzazione di un grafo orientato Dall'immagine si può derivare facilmente il costo di memorizzazione nei due casi.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo pesato non orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below of=3, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (2) node [midway, right] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (1) – (3) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (2) – (3) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (2) – (4) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (4) – (3) node [midway, below right=-1.5pt] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Matrice di adiacenza] [Lista di adiacenza] Memorizzazione di un grafo pesato non orientato Dettagli sull'implementazione.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFunzione ausiliaria che marca tutti i nodi tra loro raggiungibili ccdfs(GRAPH G, int counter, NODE u, int[] id) id[u] = counter foreach (v \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q G.adj(u)) do if (id[v] == 0) then ccdfs(G, counter, v, id) [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge[bend left=15] (1) (1) edge[bend left=15] (2) (2) edge[bend left=15] (3); [<-, dashed] (0) edge[bend right=15] (1) (1) edge[bend right=15] (2) (2) edge[bend right=15] (3) (1) edge[bend right=15] (3) (3) edge[bend right=15] (1) (0) edge[bend right=15] (3) (3) edge[bend right=15] (0); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [right of=4, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=5, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below of=4, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [right of=7, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (4) edge[bend left=15] (5) (5) edge[bend left=15] (8) (8) edge[bend left=15] (6) (8) edge[bend left=15] (7); [<-, dashed] (4) edge[bend right=15] (5) (5) edge[bend right=15] (8) (8) edge[bend right=15] (6) (8) edge[bend right=15] (7) (4) edge[bend right=15] (7) (7) edge[bend right=15] (4) (5) edge[bend right=15] (6) (6) edge[bend right=15] (5); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below right of=3, xshift=30, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (10) [right of=9, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (9) edge[bend left=15] (10); [<-, dashed] (9) edge[bend right=15] (10); Grafo con tre componenti connesse Nella figura di cui sopra è rappresentato un grafo orientato, ma poiché per ogni coppia di nodi esiste un arco in entrambe le direzioni, il grafo può anche essere visto come non orientato.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFunzione ausiliaria che marca tutti i nodi tra loro raggiungibili ccdfs(GRAPH G, int counter, NODE u, int[] id) id[u] = counter foreach (v \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q G.adj(u)) do if (id[v] == 0) then ccdfs(G, counter, v, id) [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge[bend left=15] (1) (1) edge[bend left=15] (2) (2) edge[bend left=15] (3); [<-, dashed] (0) edge[bend right=15] (1) (1) edge[bend right=15] (2) (2) edge[bend right=15] (3) (1) edge[bend right=15] (3) (3) edge[bend right=15] (1) (0) edge[bend right=15] (3) (3) edge[bend right=15] (0); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [right of=4, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=5, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below of=4, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [right of=7, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (4) edge[bend left=15] (5) (5) edge[bend left=15] (8) (8) edge[bend left=15] (6) (8) edge[bend left=15] (7); [<-, dashed] (4) edge[bend right=15] (5) (5) edge[bend right=15] (8) (8) edge[bend right=15] (6) (8) edge[bend right=15] (7) (4) edge[bend right=15] (7) (7) edge[bend right=15] (4) (5) edge[bend right=15] (6) (6) edge[bend right=15] (5); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below right of=3, xshift=30, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (10) [right of=9, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (9) edge[bend left=15] (10); [<-, dashed] (9) edge[bend right=15] (10); Grafo con tre componenti connesse Nella figura di cui sopra è rappresentato un grafo orientato, ma poiché per ogni coppia di nodi esiste un arco in entrambe le direzioni, il grafo può anche essere visto come non orientato.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFunzione ausiliaria che marca tutti i nodi tra loro raggiungibili ccdfs(GRAPH G, int counter, NODE u, int[] id) id[u] = counter foreach (v \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q G.adj(u)) do if (id[v] == 0) then ccdfs(G, counter, v, id) [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge[bend left=15] (1) (1) edge[bend left=15] (2) (2) edge[bend left=15] (3); [<-, dashed] (0) edge[bend right=15] (1) (1) edge[bend right=15] (2) (2) edge[bend right=15] (3) (1) edge[bend right=15] (3) (3) edge[bend right=15] (1) (0) edge[bend right=15] (3) (3) edge[bend right=15] (0); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [right of=4, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=5, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below of=4, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [right of=7, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (4) edge[bend left=15] (5) (5) edge[bend left=15] (8) (8) edge[bend left=15] (6) (8) edge[bend left=15] (7); [<-, dashed] (4) edge[bend right=15] (5) (5) edge[bend right=15] (8) (8) edge[bend right=15] (6) (8) edge[bend right=15] (7) (4) edge[bend right=15] (7) (7) edge[bend right=15] (4) (5) edge[bend right=15] (6) (6) edge[bend right=15] (5); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below right of=3, xshift=30, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (10) [right of=9, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (9) edge[bend left=15] (10); [<-, dashed] (9) edge[bend right=15] (10); Grafo con tre componenti connesse Nella figura di cui sopra è rappresentato un grafo orientato, ma poiché per ogni coppia di nodi esiste un arco in entrambe le direzioni, il grafo può anche essere visto come non orientato.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFunzione ausiliaria che marca tutti i nodi tra loro raggiungibili ccdfs(GRAPH G, int counter, NODE u, int[] id) id[u] = counter foreach (v \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q G.adj(u)) do if (id[v] == 0) then ccdfs(G, counter, v, id) [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge[bend left=15] (1) (1) edge[bend left=15] (2) (2) edge[bend left=15] (3); [<-, dashed] (0) edge[bend right=15] (1) (1) edge[bend right=15] (2) (2) edge[bend right=15] (3) (1) edge[bend right=15] (3) (3) edge[bend right=15] (1) (0) edge[bend right=15] (3) (3) edge[bend right=15] (0); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [right of=4, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=5, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below of=4, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [right of=7, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (4) edge[bend left=15] (5) (5) edge[bend left=15] (8) (8) edge[bend left=15] (6) (8) edge[bend left=15] (7); [<-, dashed] (4) edge[bend right=15] (5) (5) edge[bend right=15] (8) (8) edge[bend right=15] (6) (8) edge[bend right=15] (7) (4) edge[bend right=15] (7) (7) edge[bend right=15] (4) (5) edge[bend right=15] (6) (6) edge[bend right=15] (5); [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below right of=3, xshift=30, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (10) [right of=9, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (9) edge[bend left=15] (10); [<-, dashed] (9) edge[bend right=15] (10); Grafo con tre componenti connesse Nella figura di cui sopra è rappresentato un grafo orientato, ma poiché per ogni coppia di nodi esiste un arco in entrambe le direzioni, il grafo può anche essere visto come non orientato.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->, line width=1.2pt] (2) – (3); [->, line width=1.2pt] (4) – (2); [->, line width=1.2pt] (3) – (4); [->] (3) – (5); [->] (4) – (5); Grafi DAG VS grafi ciclici Verificare l'esistenza di cicli all'interno di grafi orientati non è semplice come nei grafi non orientati, infatti non è possibile usare l'algoritmo visto in precedenza, ma ne serve uno ad-hoc.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); [Grafo ciclico] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) [yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (3) (1) edge (2) (3) edge (1) (3) edge (2) (0) edge[bend left=15] (2) (2) edge[bend left=15] (0); [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] 0.35 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue, line width=1.2pt] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion, line width=1.2pt] (3) – (0); [->, dashed, color=Purple, line width=1.2pt] (0) edge[bend right=90] (3); Classificazione degli archi Nella figura si vede l'albero di copertura ottenuto dopo aver effettuato una visita in profondità partendo dal nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) [yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (3) (1) edge (2) (3) edge (1) (3) edge (2) (0) edge[bend left=15] (2) (2) edge[bend left=15] (0); [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] 0.3 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below of=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ] (2) [left of=1, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [left of=3, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (2) edge[bend left=15] (0) (2) edge (1) (1) edge (3); [->, dashed, color=blue, line width=1.2pt] (0) edge (1) (4) edge (3); [->, dashed, color=Dandelion, line width=1.2pt] (0) edge[bend left=15] (2); [->, dashed, color=Purple, line width=1.2pt] (2) – (3); Classificazione degli archi e intervalli di tempo Nella figura di cui sopra, si è effettuata una visita in profondità a partire dal nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e si sono visitati, nell'ordine, i nodi \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo pesato non orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below of=3, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (2) node [midway, right] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (1) – (3) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (2) – (3) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (2) – (4) node [midway, below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (4) – (3) node [midway, below right=-1.5pt] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Matrice di adiacenza] [Lista di adiacenza] Memorizzazione di un grafo pesato non orientato\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) edge[bend left=20] (2); [<-] (0) edge[bend right=20] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); [Grafo non orientato] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (2) (0) edge (3) (1) edge (3) (2) edge (4); [main] (5) [above right of=4, yshift=15, xshift=15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [right of=5, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [right of=6, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [right of=7, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [right of=8, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (5) edge (6) (6) edge (7) (5) edge[bend left=30] (7) (5) edge[bend right=30] (8) (8) edge (9); [main] (10) [below right of=4, yshift=-15, xshift=15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (11) [right of=10, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (12) [right of=11, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (13) [right of=12, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (14) [right of=13, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (10) edge (11) (10) edge[bend left=30] (12) (10) edge[bend left=45] (14) (11) edge[bend right=45] (13) (12) edge[bend right=45] (14); Possibili ordinamenti topologici di un grafo\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (1) edge (3) (2) edge (4); [Output: 1 3] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5 2] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Output: 1 3 5 2 4] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [] (4) [right of=1, xshift=10] ; Esecuzione dell'algoritmo naive per l'ordinamento topologico\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[->] (1) edge (3) (2) edge (4); [Output: 1 3] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5 2] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Output: 1 3 5 2 4] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [] (4) [right of=1, xshift=10] ; Esecuzione dell'algoritmo naive per l'ordinamento topologico\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (0) edge (1) (0) edge (2) (0) edge (3) (1) edge (3) (2) edge (4); [Output: 1] [] (0) ; [main] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[->] (0) edge (1) (0) edge (2) (0) edge (3) (1) edge (3) (2) edge (4); [Output: 1] [] (0) ; [main] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Output: ] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4); [->, dashed, color=blue, line width=1.2pt] (0) – (3); [] (5) [below of=3] Stack = 1, 2, 4, 3, 5; [Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4) (0) edge (3); [] (5) [below of=3] Stack = 1, 2, 4, 3, 5; Esempi di ordinamenti topologici\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ; [] (7) [below of=3] Stack = 1, 2, 4, 3, 5; Esempi di ordinamenti topologici\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4); [->, dashed, color=Purple, line width=1.2pt] (0) – (3); [] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4); [->, dashed, color=Purple, line width=1.2pt] (0) – (3); [] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (7) [below of=3] Stack = 1, 2, 4, 3, 5; [Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4) (0) edge (3);\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ; [] (7) [below of=3] Stack = 1, 2, 4, 3, 5; Esempi di ordinamenti topologici\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); [Grafo ciclico] 0.42 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->, line width=1.2pt] (2) – (3); [->, line width=1.2pt] (4) – (2); [->, line width=1.2pt] (3) – (4); [->] (3) – (5); [->] (4) – (5); Grafi DAG VS grafi ciclici Verificare l'esistenza di cicli all'interno di grafi orientati non è semplice come nei grafi non orientati, infatti non è possibile usare l'algoritmo visto in precedenza, ma ne serve uno ad-hoc.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); [Grafo ciclico] 0.42 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->, line width=1.2pt] (2) – (3); [->, line width=1.2pt] (4) – (2); [->, line width=1.2pt] (3) – (4); [->] (3) – (5); [->] (4) – (5); Grafi DAG VS grafi ciclici Verificare l'esistenza di cicli all'interno di grafi orientati non è semplice come nei grafi non orientati, infatti non è possibile usare l'algoritmo visto in precedenza, ma ne serve uno ad-hoc.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) [yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (3) (1) edge (2) (3) edge (1) (3) edge (2) (0) edge[bend left=15] (2) (2) edge[bend left=15] (0); [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue, line width=1.2pt] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion, line width=1.2pt] (3) – (0); [->, dashed, color=Purple, line width=1.2pt] (0) edge[bend right=90] (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (4) [right of=2, xshift=-25] ; [] (5) [left of=1, xshift=10] ; Classificazione degli archi Nella figura si vede l'albero di copertura ottenuto dopo aver effettuato una visita in profondità partendo dal nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (4) [right of=2, xshift=-25] ; [] (5) [left of=1, xshift=10] ; Classificazione degli archi Nella figura si vede l'albero di copertura ottenuto dopo aver effettuato una visita in profondità partendo dal nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (3) – (5); [->] (4) – (5);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo originale] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo trasposto] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafo e relativo grafo trasposto\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) – (1); [->] (0) – (2); [->, color=red, line width=1.2pt] (1) – (3); [->] (2) – (3); [->, color=red, line width=1.2pt] (4) – (2); [->, color=red, line width=1.2pt] (3) – (4); [->, color=red, line width=1.2pt] (4) – (5); [->] (5) – (3); [] (6) [below of=2, xshift=35] Stack = a, b, c, e, d, f; Ordinamento topologico di un grafo generico L'utilizzo della topsort permette di ottenere i nodi di un grafo in ordine decrescente di tempo di fine.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (6) [below of=2, yshift=23] ; [Componenti fortemente connesse] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); Componenti fortemente connesse di un grafo Una soluzione ingenua potrebbe essere quella di applicare cc al grafo, ma purtroppo il risultato dipenderebbe dal nodo di partenza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QAl termine dell'esecuzione di cc siamo riusciti ad'identificare con successo tutte e tre le componenti fortemente connesse del grafo: [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-, color=red, line width=1.2pt] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-, color=red, line width=1.2pt] (4) – (5); [<-, color=red, line width=1.2pt] (5) – (3); Componenti fortemente connesse del grafo\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[right, red, xshift=15, yshift=-14]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Componenti nel grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[right, red, xshift=15, yshift=-14]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Componenti nel grafo trasposto] 0.48 !\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [->, red, line width=1.2pt] (6) edge[bend left=30] (7); [-> ,red, line width=1.2pt] (8) edge[bend left=30] (9); [-> ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<- ,red, line width=1.2pt] (8) edge[bend left=30] (9); [<- ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<- ,red, line width=1.2pt] (8) edge[bend left=30] (9); [<- ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<- ,red, line width=1.2pt] (8) edge[bend left=30] (9); [<- ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [color=red, dashed, line width=1.2pt] (0) circle (0.6); [color=red, dashed, line width=1.2pt] (1) circle (0.6); [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15); [color=red, dashed, line width=1.2pt] (0) circle (0.6) node (6) [yshift=12] node (10) [yshift=-12.5, xshift=-3] ; [color=red, dashed, line width=1.2pt] (1) circle (0.6) node (7) [xshift=-13] node (8) [yshift=12.5,xshift=3] ; [color=red, dashed, line width=1.2pt, rotate=35] (4) [yshift=38, xshift=21] ellipse (3.4 and 2.15) node (9) [yshift=70, xshift=18] node (11) [yshift=-47, xshift=-80] ; [<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<- ,red, line width=1.2pt] (8) edge[bend left=30] (9); [<- ,red, line width=1.2pt] (10) edge[bend right=30] (11); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red, line width=1.2pt] (6) edge[bend left=30] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<-] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [<-] (6.-75) edge[red, line width=1.2pt, bend right=30] (8); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[right, red, xshift=15, yshift=-14]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red, line width=1.2pt] (6) edge[bend left=30] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Componenti nel grafo trasposto] 0.48 !\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[above left, red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[right, red, xshift=15, yshift=-14]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red, above left]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=[red]:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red, line width=1.2pt] (6) edge[bend left=30] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Componenti nel grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red, line width=1.2pt] (6) edge[bend left=30] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<-] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [<-] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[<-, red, line width=1.2pt] (6) edge[bend left=30] (7); [<-] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [<-] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QAl termine dell'esecuzione di cc siamo riusciti ad'identificare con successo tutte e tre le componenti fortemente connesse del grafo: [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-, color=red, line width=1.2pt] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-, color=red, line width=1.2pt] (4) – (5); [<-, color=red, line width=1.2pt] (5) – (3); Componenti fortemente connesse del grafo\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\QAl termine dell'esecuzione di cc siamo riusciti ad'identificare con successo tutte e tre le componenti fortemente connesse del grafo: [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-, color=red, line width=1.2pt] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-, color=red, line width=1.2pt] (4) – (5); [<-, color=red, line width=1.2pt] (5) – (3); Componenti fortemente connesse del grafo\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; (0) – (1); (0) – (2); (1) – (3); (2) – (3); (2) – (4); (4) – (3); Grafo non orientato\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo orientato] [main] (0) [yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below of=0, yshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (3) (1) edge (2) (3) edge (1) (3) edge (2) (0) edge[bend left=15] (2) (2) edge[bend left=15] (0);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (4) at (3) [yshift=-10] ; [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue, line width=1.2pt] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion, line width=1.2pt] (3) – (0); [->, dashed, color=Purple, line width=1.2pt] (0) edge[bend right=90] (3);\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (4) at (3) [yshift=-10] ; [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red, line width=1.2pt] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue, line width=1.2pt] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion, line width=1.2pt] (3) – (0); [->, dashed, color=Purple, line width=1.2pt] (0) edge[bend right=90] (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QConsideriamo un albero binario perfetto come il seguente: [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6); Albero binario perfetto\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5); Albero completo Un albero min-heap è un albero binario completo tale per cui il valore memorizzato in ogni nodo è minore dei valori memorizzati nei suoi figli.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); Albero max-heap Un albero heap non impone un ordinamento totale tra i figli di un nodo, bensì definisce un ordinamento parziale e quindi soddisfa le seguenti tre proprietà: Riflessività: ogni nodo è maggiore o uguale a se stesso; Antisimmetria: se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, allora \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; Transitività: se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, allora \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; Un ordinamento parziale è una nozione più debole, ma più facile da realizzare.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Albero heap con radice in 0] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Vettore heap con radice in 1] [Vettore heap con radice in 0] Memorizzazione alberi heap\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (0) 16; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (1) [right of=0, xshift=-28.5] 14; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (2) [right of=1, xshift=-28.5] 10; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (3) [right of=2, xshift=-28.5] 8; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (4) [right of=3, xshift=-28.5] 7; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (5) [right of=4, xshift=-28.5] 9; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (6) [right of=5, xshift=-28.5] 3; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (7) [right of=6, xshift=-28.5] 2; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (8) [right of=7, xshift=-28.5] 4; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (9) [right of=8,xshift=-28.5] 1; Memorizzazione alberi heap\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (0) 16; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (1) [right of=0, xshift=-28.5] 14; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (2) [right of=1, xshift=-28.5] 10; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (3) [right of=2, xshift=-28.5] 8; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (4) [right of=3, xshift=-28.5] 7; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (5) [right of=4, xshift=-28.5] 9; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (6) [right of=5, xshift=-28.5] 3; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (7) [right of=6, xshift=-28.5] 2; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (8) [right of=7, xshift=-28.5] 4; [rectangle, draw, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, minimum width=10mm, minimum height=10mm] (9) [right of=8,xshift=-28.5] 1; [Vettore heap con radice in 0] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, dashed] (0) edge[bend left=30] (1) (1) edge[bend left=30] (0); [Il 3 viene scambiato con l'8] [Il 3 viene scambiato con il 4] Al termine dell'esecuzione abbiamo ottenuto un albero max-heap corretto.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, fill=leaf, line width=1.2pt] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Il 3 viene scambiato con il 14] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [->, dashed] (3) edge[bend left=30] (8) (8) edge[bend left=30] (3); Al termine dell'esecuzione abbiamo ottenuto un albero max-heap corretto.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, dashed] (1) edge[bend left=30] (3) (3) edge[bend left=30] (1); [Il 3 viene scambiato con il 4] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, dashed] (0) edge[bend left=30] (1) (1) edge[bend left=30] (0); [Il 3 viene scambiato con l'8] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=-5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=5, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=10, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Vettore heap con radice in 1] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QheapBuild(ITEM[] A, int n) for (i = \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qn/2\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q downto 1) do maxHeapRestore(A, i, n) [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (10) [below right of=4, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9) (4) edge (10); maxHeapRestore viene applicata solo ai nodi interni Dimostrazione di correttezza.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, fill=leaf, line width=1.2pt] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Il 3 viene scambiato con il 14] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); Albero max-heap Un albero heap non impone un ordinamento totale tra i figli di un nodo, bensì definisce un ordinamento parziale e quindi soddisfa le seguenti tre proprietà: Riflessività: ogni nodo è maggiore o uguale a se stesso; Antisimmetria: se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, allora \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; Transitività: se \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, allora \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; Un ordinamento parziale è una nozione più debole, ma più facile da realizzare.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Albero heap con radice in 0] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [Vettore heap con radice in 1] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below left of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=1, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=2, xshift=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=3, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, fill=leaf, line width=1.2pt] (8) [below right of=3, xshift=-20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=4, xshift=20, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (3) edge (8) (4) edge (9); [->, dashed] (3) edge[bend left=30] (8) (8) edge[bend left=30] (3); Al termine dell'esecuzione abbiamo ottenuto un albero max-heap corretto.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (1) edge (3) (2) edge (4); [Output: 1 3] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (1) edge (3) (2) edge (4); [Output: 1 3] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4);\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[->] (1) edge (3) (2) edge (4); [Output: 1 3] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4);\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[Output: 1 3 5] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5 2] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Output: 1 3 5 2 4] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [] (4) [right of=1, xshift=10] ; Esecuzione dell'algoritmo naive per l'ordinamento topologico\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Output: 1 3 5] [] (0) ; [] (1) [right of=0, xshift=10] ; [main] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (2) edge (4); [Output: 1 3 5 2] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [main] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [Output: 1 3 5 2 4] [] (0) ; [] (1) [right of=0, xshift=10] ; [] (2) [above of=1, yshift=10] ; [] (3) [below of=1, yshift=-10] ; [] (4) [right of=1, xshift=10] ; Esecuzione dell'algoritmo naive per l'ordinamento topologico\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Grafo originale] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo trasposto] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafo orientato e relativo grafo trasposto\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-, color=red, line width=1.2pt] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-, color=red, line width=1.2pt] (4) – (5); [<-, color=red, line width=1.2pt] (5) – (3); Componenti fortemente connesse del grafo\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=above left:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (6) at (0) ; [circle, minimum size=12mm, draw, red, dashed, line width=1.2pt] (7) at (1) ; [ellipse, draw, red, dashed, line width=1.2pt, minimum width=4.2cm, minimum height=7cm, rotate=-55 ] (8) [above of=4, xshift=-38, yshift=-34] ; [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-, color=red, line width=1.2pt] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-, color=red, line width=1.2pt] (4) – (5); [<-, color=red, line width=1.2pt] (5) – (3); Componenti fortemente connesse del grafo\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (4) at (3) [yshift=-10] ; [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion] (3) – (0); [->, dashed, color=Purple] (0) edge[bend right=90] (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=right:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [below of=0, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ] (2) [left of=1, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [left of=3, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (2) edge[bend left=15] (0) (2) edge (1) (1) edge (3); [->, dashed, color=blue] (0) edge (1) (4) edge (3); [->, dashed, color=Dandelion] (0) edge[bend left=15] (2); [->, dashed, color=Purple] (2) – (3); Classificazione degli archi e intervalli di tempo Nella figura di cui sopra, si è effettuata una visita in profondità a partire dal nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q e si sono visitati, nell'ordine, i nodi \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[] (7) [below of=3] Stack = 1, 2, 4, 3, 5; [Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4) (0) edge (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4); [->, dashed, color=Purple] (0) – (3); [] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[Ordinamento topologico partendo da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [right of=0, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [above of=1, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [below of=1, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=1, xshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (0) edge (1) (0) edge (2) (1) edge (3) (2) edge (4); [->, dashed, color=Purple] (0) – (3); [] (5) [right of=4, xshift=-17] ; [] (6) [left of=0, xshift=17] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (1) [above right of=0, xshift=20, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (2) [below right of=0, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (3) [right of=1, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (4) [right of=2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] (5) [below right of=3, xshift=20, yshift=-10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (0) – (1); [->] (0) – (2); [->, color=red] (1) – (3); [->] (2) – (3); [->, color=red] (4) – (2); [->, color=red] (3) – (4); [->, color=red] (4) – (5); [->] (5) – (3); [] (6) [below of=2, xshift=35] Stack = a, b, c, e, d, f; Ordinamento topologico di un grafo generico L'utilizzo della topsort permette di ottenere i nodi di un grafo in ordine decrescente di tempo di fine.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red] (6) edge[bend left=30, line width=1.2pt] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Grafo delle componenti del grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[<-, red] (6) edge[bend left=30, line width=1.2pt] (7); [<-] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [<-] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Grafi delle componenti del grafo d'esempio e del suo trasposto I grafi delle componenti sono sempre aciclici.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->, red] (6) edge[bend left=30, line width=1.2pt] (7); [->] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [->] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [->] (0) – (1); [->] (0) – (2); [->] (1) – (3); [->] (2) – (3); [->] (4) – (2); [->] (3) – (4); [->] (4) – (5); [->] (5) – (3); [Componenti nel grafo trasposto] 0.48 !\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[<-, red] (6) edge[bend left=30, line width=1.2pt] (7); [<-] (7.45) edge[red, line width=1.2pt, bend left=30] (8.120); [<-] (6.-75) edge[red, line width=1.2pt, bend right=30] (8.-92); [<-] (0) – (1); [<-] (0) – (2); [<-] (1) – (3); [<-] (2) – (3); [<-] (4) – (2); [<-] (3) – (4); [<-] (4) – (5); [<-] (5) – (3); Discovery e finish time delle componenti Quanti si considera un arco tra due componenti fortemente connesse, in realtà, bisogna considerare l'arco che collega i due nodi appartenenti ad una e all'altra componente.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, line width=1.2pt] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, line width=1.2pt] (1) [above right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, line width=1.2pt] (2) [below right of=0, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, line width=1.2pt] (0) – (1); [->] (0) edge[bend left=20, line width=1.2pt] (2); [<-] (0) edge[bend right=20, line width=1.2pt] (2); [->] (1) – (3); [->] (2) – (3); [->] (2) – (4); [->] (4) – (3); \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è incidente da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente ad \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è adiacente a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[] (4) at (3) [yshift=-10] ; [Albero di copertura con radice \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] [main] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0, yshift=-15, xshift=5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below right of=0, yshift=-15, xshift=-5] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-15, xshift=-15] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [->, color=red] (0) edge (1) (0) edge (2) (1) edge (3); [->, dashed, color=blue] (2) edge (1) (2) edge (3); [->, dashed, color=Dandelion] (3) – (0); [->, dashed, color=Purple] (0) edge[bend right=90] (3);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0] ; [main] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l2) [right of=0, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [right of=l2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below left of=3] ; [main] (5) [below right of=3] ; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [inner sep=0] (12) [below left of=5, xshift=15, yshift=-20] ; [inner sep=0] (13) [below right of=5, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (3) edge (4) (3) edge (5) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (5) edge (12) (5) edge (13) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11) (12) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (13); Risoluzione del caso 1\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (1) [below left of=0] ; [main] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l2) [right of=0, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [right of=l2, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=3] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below left of=3] ; [main] (5) [below right of=3] ; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [inner sep=0] (12) [below left of=5, xshift=15, yshift=-20] ; [inner sep=0] (13) [below right of=5, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (3) edge (4) (3) edge (5) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (5) edge (12) (5) edge (13) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11) (12) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (13); Risoluzione del caso 1\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[b] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0, xshift=-100] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (2) [below right of=0, xshift=100] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [below left of=1, xshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (4) [below right of=1, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (5) [below left of=2, xshift=-30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (6) [below right of=2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (7) [below left of=3, xshift=7] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (8) [below left of=5, xshift=7] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (9) [below right of=5, xshift=-7] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (10) [below left of=6, xshift=7] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (11) [below right of=6, xshift=-7] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (12) [below left of=8, xshift=25] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [r] (13) [below right of=8, xshift=-25] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [nil] (14) [below right of=3, xshift=-7] Nil; [nil] (15) [below left of=4, xshift=7] Nil; [nil] (16) [below right of=4, xshift=-7] Nil; [nil] (17) [below left of=14, xshift=25, yshift=-3] Nil; [nil] (18) [below right of=14, xshift=-25, yshift=-3] Nil; [nil] (19) [below left of=15, xshift=25, yshift=-3] Nil; [nil] (20) [below right of=15, xshift=-25, yshift=-3] Nil; [nil] (21) [below left of=16, xshift=25, yshift=-3] Nil; [nil] (22) [below right of=16, xshift=-25, yshift=-3] Nil; [nil] (23) [below left of=9, xshift=25, yshift=-5] Nil; [nil] (24) [below right of=9, xshift=-25, yshift=-5] Nil; [nil] (25) [below left of=10, xshift=25, yshift=-5] Nil; [nil] (26) [below right of=10, xshift=-25, yshift=-5] Nil; [nil] (27) [below left of=11, xshift=25, yshift=-5] Nil; [nil] (28) [below right of=11, xshift=-25, yshift=-5] Nil; [nil] (29) [below left of=7, xshift=25, yshift=-5] Nil; [nil] (30) [below right of=7, xshift=-25, yshift=-5] Nil; [nil] (31) [below left of=12, xshift=0] Nil; [nil] (32) [below of=12, xshift=-3, yshift=16.5] Nil; [nil] (33) [below of=13, xshift=3, yshift=16.5] Nil; [nil] (34) [below right of=13, xshift=0] Nil; [-] (0) edge (1) (0) edge (2) (1) edge (3) (1) edge (4) (2) edge (5) (2) edge (6) (3) edge (7) (5) edge (8) (5) edge (9) (6) edge (10) (6) edge (11) (8) edge (12) (8) edge (13); [-] (3) edge (14) (4) edge (15) (4) edge (16) (14) edge (17) (14) edge (18) (15) edge (19) (15) edge (20) (16) edge (21) (16) edge (22) (9) edge (23) (9) edge (24) (10) edge (25) (10) edge (26) (11) edge (27) (11) edge (28) (7) edge (29) (7) edge (30) (12) edge (31) (12) edge (32) (13) edge (33) (13) edge (34); Albero Red-Black Diamo inoltre le seguenti definizioni: Dato un nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, l'altezza nera di quel nodo, indicata come \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, è il numero di nodi neri lungo ogni cammino da \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (escluso) ad ogni sua foglia (inclusa).\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0] ; [b] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [above right of=0, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=3, xshift=40] ; [] (l2) [right of=3, xshift=60] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=4, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (0) edge (3) (3) edge (4) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11); Risoluzione del caso 2\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0] ; [b] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [above right of=0, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=3, xshift=40] ; [] (l2) [right of=3, xshift=60] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=4, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (0) edge (3) (3) edge (4) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11); Risoluzione del caso 2\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0] ; [b] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [above right of=0, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=3, xshift=20] ; [] (l2) [right of=3, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=4, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (0) edge (3) (3) edge (4) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11); Risoluzione del caso 2\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0] ; [b] (2) [below right of=0] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (3) [above right of=0, xshift=20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below right of=3, xshift=20] ; [] (l2) [right of=3, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (l3) [right of=4, xshift=-20] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ; [inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ; [-] (0) edge (1) (0) edge (2) (0) edge (3) (3) edge (4) (1) edge (6) (1) edge (7) (2) edge (8) (2) edge (9) (4) edge (10) (4) edge (11) (6) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (7) (8) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (9) (10) edge node[midway, above, yshift=10] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (11); Risoluzione del caso 2\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0, xshift=10] ; [b] (2) [below right of=0, xshift=-10] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0, xshift=10] ; [b] (2) [below right of=0, xshift=-10] ; [] (l1) [left of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[r] (3) [above right of=0, xshift=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (4) [below right of=3, xshift=0] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[b] (5) [above right of=3, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (3) [above right of=0, xshift=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (4) [below right of=3, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (6) [below left of=1, xshift=15, yshift=-20] ; [inner sep=0] (7) [below right of=1, xshift=-15, yshift=-20] ; [inner sep=0] (8) [below left of=2, xshift=15, yshift=-20] ; [inner sep=0] (9) [below right of=2, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (10) [below left of=4, xshift=15, yshift=-20] ; [inner sep=0] (11) [below right of=4, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (12) [below right of=5, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (13) [below left of=12, xshift=0] ; [b] (14) [below right of=12, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (23) [right of=l2, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (24) [below right of=23, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (20) [below left of=23] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (21) [below left of=20, xshift=10] ; [b] (22) [below right of=20, xshift=-10] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (26) [below left of=21, xshift=15, yshift=-20] ; [inner sep=0] (27) [below right of=21, xshift=-15, yshift=-20] ; [inner sep=0] (28) [below left of=22, xshift=15, yshift=-20] ; [inner sep=0] (29) [below right of=22, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (30) [below left of=24, xshift=15, yshift=-20] ; [inner sep=0] (31) [below right of=24, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (32) [below right of=25, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (33) [below left of=32, xshift=0] ; [b] (34) [below right of=32, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (35) [below left of=33, xshift=15, yshift=-20] ; [inner sep=0] (36) [below right of=33, xshift=-15, yshift=-20] ; [inner sep=0] (37) [below left of=34, xshift=15, yshift=-20] ; [inner sep=0] (38) [below right of=34, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (15) [below left of=13, xshift=15, yshift=-20] ; [inner sep=0] (16) [below right of=13, xshift=-15, yshift=-20] ; [inner sep=0] (17) [below left of=14, xshift=15, yshift=-20] ; [inner sep=0] (18) [below right of=14, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (23) [right of=l2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (24) [below right of=23, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[b] (23) [right of=l2, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (24) [below right of=23, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[b] (32) [below right of=25, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (33) [below left of=32, xshift=0] ; [b] (34) [below right of=32, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (1) [below left of=0, xshift=10] ; [b] (2) [below right of=0, xshift=-10] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[b] (12) [below right of=5, xshift=40] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (13) [below left of=12, xshift=0] ; [main] (14) [below right of=12, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[b] (20) [below left of=23] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (26) [below left of=20, xshift=15, yshift=-20] ; [inner sep=0] (27) [below right of=20, xshift=-15, yshift=-20] ; [inner sep=0] (28) [below left of=22, xshift=15, yshift=-20] ; [inner sep=0] (29) [below right of=22, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (32) [below right of=25, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (33) [below left of=32, xshift=0] ; [b] (34) [below right of=32, xshift=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (35) [below left of=33, xshift=15, yshift=-20] ; [inner sep=0] (36) [below right of=33, xshift=-15, yshift=-20] ; [main] (37) [below left of=34, xshift=10, yshift=-20] ; [main] (38) [below right of=34, xshift=-10, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[inner sep=0] (39) [below left of=37, xshift=15, yshift=-20] ; [inner sep=0] (40) [below right of=37, xshift=-15, yshift=-20] ; [inner sep=0] (41) [below left of=38, xshift=15, yshift=-20] ; [inner sep=0] (42) [below right of=38, xshift=-15, yshift=-20] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[r] (3) [above left of=0, xshift=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [b] (4) [below left of=3, xshift=0] ;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[b] (32) [below right of=25, xshift=30] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (33) [below left of=32, xshift=0] ; [main] (34) [below right of=32, xshift=0] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFinora l'unica tecnica di risoluzione di problemi, o di ricerca di algoritmi, che abbiamo visto è il chap:divide-et-impera\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QFinora, l'unica tecnica di risoluzione di problemi, o di ricerca di algoritmi, che abbiamo visto è il chap:divide-et-impera.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[rect] (1) Problema di ottimizzazione; [rect] (2) [below of=1, yshift=-7.5mm] Definizione della soluzione in maniera ricorsiva; [rect] (3) [right of=2, xshift=100mm] Definizione del valore della soluzione in maniera ricorsiva; [rect] (4) [above of=3, yshift=7.5mm] Problema di conteggio; [rect] (5) [below of=3, xshift=-120mm, yshift=-15mm] Divide-et-impera; [rect] (6) [below of=3, xshift=-60mm, yshift=-15mm] Programmazione dinamica; [rect] (7) [below of=3, xshift=0mm, yshift=-15mm] Memoization; [rect] (8) [below of=7, yshift=-7.5mm, xshift=-27.5mm] Tabella delle soluzioni;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[rect] (9) [right of=8, xshift=30mm] Output numerico; [rect] (10) [left of=8, xshift=-40mm] Ricostruzione della soluzione; [rect] (11) [left of=10, xshift=-30mm] Soluzione ottima; [->] (1) edge (2) (2) edge (3) (4) edge (3) (3.west)+(0mm, -2mm) edge [bend right=15] node [near end, left] Non ci sono sotto-problemi ripetuti (5.north) (3) edge [bend right=5] node [midway, left=2mm] Ci sono sotto-problemi ripetuti e devono essere risolti tutti (6) (3) edge [bend left=10] node [midway, right] Ci sono sotto-problemi ripetuti, ma ne devono essere risolti solo alcuni (7.north) (6.south east)+(-1mm, 1mm) edge [bend left=15] (8) (7.south west)+(1mm, 1mm) edge [bend right=15] (8) (8) edge (9) (8) edge (10) (10) edge (11); Schema generale di approccio Lo schema di cui sopra mostra un approccio generale alla scelta della tecnica risolutiva più adatta al tipo di problema da risolvere.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QAd esempio se T=\"questoèunoscempio\" e P=\"unesempio\", è possibile trovare un'occorrenza approssimata di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q correggendo due errori, ovvero cancellando la c di scempio e sostituendo la o di uno con una e.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QData la catena di prodotti: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q una possibile parentesizzazione per \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q è la seguente: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q [rect] (0) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (1a) [below left of=0, xshift=-20mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (1b) [below right of=0, xshift=20mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (2aa) [below left of=1a, xshift=-3mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (2ab) [below right of=1a, xshift=3mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (2ba) [below left of=1b, xshift=-3mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (2bb) [below right of=1b, xshift=3mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (3aba) [below left of=2ab, xshift=5mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (3abb) [below right of=2ab, xshift=-5mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (3bba) [below left of=2bb, xshift=5mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [rect] (3bbb) [below right of=2bb, xshift=-5mm, yshift=-7.5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QL'algoritmo completo è il seguente: SET maxInterval(int[] a, int[] b, int[] w, int n)\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (a) edge[line width=1.2pt] node[above] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (b) (b) edge[line width=1.2pt] node[right] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (c) (a) edge[line width=1.2pt] node[left] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (d); [-] (d) edge node[below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (c); Possibili cammini con sorgente nel nodo \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (a) edge[line width=1.2pt] node[above] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (b) (b) edge[line width=1.2pt] node[right] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (c) (c) edge[line width=1.2pt] node[below] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (d); [-] (a) edge node[left] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (d); [Soluzione ammissibile] [main, line width=1.2pt] (a) [label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [right of=a, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, xshift=10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (c) [below of=b, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, yshift=-10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (d) [left of=c, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, xshift=-10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[Soluzione non ammissibile] [main, line width=1.2pt] (a) [label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [right of=a, label=\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, xshift=10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (c) [below of=b, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, yshift=-10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (d) [left of=c, label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, xshift=-10mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[-] (a) edge[line width=1.2pt] (h) (h) edge[line width=1.2pt] (b) (b) edge[line width=1.2pt] (c) (c) edge[line width=1.2pt] (d) (d) edge[line width=1.2pt] (f) (f) edge[line width=1.2pt] (e) (h) edge[line width=1.2pt] (i) (i) edge[line width=1.2pt] (g); [-] (a) edge (b) (c) edge (i) (c) edge (f) (h) edge (g) (g) edge (f) (d) edge (e); Esempio di albero di copertura Detto questo, possiamo dire che tutte le soluzioni che non generano un albero di copertura non sono ammissibili come soluzioni al problema.\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (a) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [above right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (i) [below right of=b] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (c) [above right of=i] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [] (0) [below right of=c] ; [main] (d) [above right of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (e) [below right of=d] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (f) [below left of=e] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (g) [below right of=i] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (h) [below right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (a) edge (b) (b) edge (empty1) (empty1) edge (empty2) (empty2) edge (c) (c) edge (d) (c) edge (e); [->, dashed] (b) edge (empty3) (empty3) edge (empty4) (empty4) edge (c);\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (a) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (empty1) [above right of=b] ; [main] (empty2) [right of=empty1] ; [main] (empty3) [below right of=b] ; [main] (empty4) [right of=empty3] ; [main] (c) [below right of=empty2] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (d) [above right of=c] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (e) [below right of=c] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (a) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (empty1) [right of=b] ; [main] (empty2) [right of=empty1] ; [main] (c) [right of=empty2] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (d) [above right of=c] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (e) [below right of=c] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main] (s) [label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (h) [label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, right of=s, xshift=20mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (k) [label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, right of=h, xshift=20mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (u) [label=below:\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, right of=k, xshift=20mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[-] (s) edge[dashed] (h) (h) edge (k) (k) edge[dashed] (u);\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (a) edge (b) (b) edge (empty1) (empty1) edge (empty2) (empty2) edge (c) (c) edge (d) (c) edge (e); [->, dashed] (b) edge (empty3) (empty3) edge (empty4) (empty4) edge (c); Esempi di cammini minimi\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qint[], int[]\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q shortestPath(GRAPH G, NODE s) int[] T = new int[1…\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\QV() - s) do T[u] = nil d[u] = \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q b[u] = false T[s] = nil d[s] = 0 b[s] = true DATASTRUCTURE S = DataStructure() S.add(s) while (not S.isEmpty()) do int u = S.extract() b[u] = false foreach (v \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q G.adj(u)) do if (d[u] + G.w(u, v) < d[v]) then if (not b[v]) then S.add(v) b[v] = true else Azione da svolgere nel caso \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q T[v] = u d[v] = d[u] + G.w(u, v) return \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QT, d\\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main] (a) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [above right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (i) [below right of=b] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (c) [above right of=i] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main, color=white] (0) [below right of=c] ; [main] (d) [above right of=0] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (e) [below right of=d] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (f) [below left of=e] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (g) [below right of=i] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (h) [below right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qint[], int[]\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q minPathPrototype(GRAPH G, NODE s) Inizializza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q a una foresta di copertura composta da nodi isolati Inizializza \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q con sovrastima della distanza, cioè \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q while (\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qu, v\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q : d[u] + G.w(u, v) < d[v]) do d[v] = d[u] + G.w(u, v) Sostituisci il padre di \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q con \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q return \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QT, d\\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[main, line width=1.2pt] (a) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (b) [below right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (c) [above right of=a] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"WHITESPACE_PUNCTUATION","sentence":"^\\Q[main, color=white] (0) [below right of=c] ;\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[-] (a) edge[line width=1.2pt] (h) (h) edge[line width=1.2pt] (b) (b) edge[line width=1.2pt] (c) (c) edge[line width=1.2pt] (d) (d) edge[line width=1.2pt] (f) (f) edge[line width=1.2pt] (e) (h) edge[line width=1.2pt] (i) (i) edge[line width=1.2pt] (g); [-, dashed] (a) edge (b) (c) edge (i) (c) edge (f) (h) edge (g) (g) edge (f) (d) edge (e); Esempio di albero di copertura Detto questo, possiamo dire che tutte le soluzioni che non generano un albero di copertura non sono ammissibili come soluzioni al problema.\\E$"}
{"rule":"MORFOLOGIK_RULE_IT_IT","sentence":"^\\Q[->] (1) edge node[above] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (2) (2) edge node[above] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (3) (1) edge [bend left=30] node[above] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q (3);\\E$"}
