{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprivileged-ring-model.png 0.5 Privilege-ring model\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprivileged-ring-model.png 0.5 Privilege-ring model Virtualization can use a ring de-priviledging\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSimilarly, when an hardware interrupt verifies\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QSimilarly, when an hardware interrupt verifies, CPU execution will stop and it will jump to\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSimilarly, when an hardware interrupt verifies, CPU execution will stop and it will jump to interrupt handler in OS.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE","sentence":"^\\QSimilarly, when an hardware interrupt verifies, CPU execution will stop and it will jump to interrupt handler in OS.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QPracically, userland code writes the address of the targeted kernel routine in a specific register, then SYSENTER is called and the kernel reads the address\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QPracically, userland code writes the address of the targeted kernel routine in a specific register, then SYSENTER is called and the kernel jumps to the selected routing reading the address from the register.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtrap-handling-traditional-OSs.png 0.25 Trap handling in traditional OSs Diving deeper into trap handling, when a trap is generated, userland code (i.e. code outside the kernel) generates a software interrupt (e.g. thorugh the instruction INT xx).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtrap-handling-trap-and-emulate2.png 0.8\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprivileged-ring-model.png 0.4 Privilege-ring model\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtrap-handling-traditional-OSs.png 0.25 Trap handling in traditional OSs\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QPractically, userland code writes the address of the targeted kernel routine in a specific register, then SYSENTER is called and the kernel jumps to the selected routing reading the address from the register without additional accesses to memory.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qhav.png 0.4 Hardware assisted virtualization modes The VMM runs al ring 0 in root-mode, while guest OSs run at ring 0 in non-root mode.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QTo address these problematics distributed and scalable systems are required.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcloud-computing-5points.png 0.8 Five key aspects of cloud computing\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcloud-computing-5points.png 0.8 Five key aspects of cloud computing cloud-computing-nist.png 1 NIST reference model for cloud computing\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcloud-computing-5points.png 0.7 Five key aspects of cloud computing cloud-computing-nist.png 1 NIST reference model for cloud computing A carrier is someone who provide access to a cloud service, such as Telecom, while a broker is a subject that the delivery of cloud services to users, such as a portal to the cloud (e.g. Booking.com).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qvmcs.png 0.4 Virtual Machine Control Structure\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcloud-computing-5points.png 0.7 Five key aspects of cloud computing cloud-computing-nist.png 1 NIST reference model for cloud computing A carrier is someone who provides access to a cloud service, such as Telecom, while a broker is a subject that handles the delivery of cloud services to users, such as a portal to the cloud (e.g. Booking.com).\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpage-tables.png 0.6 Memory paging\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qshadow-page-tables.png 0.6 Memory paging in virtualised environments\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpage-tables-HW.png 0.6 Hardware assisted memory virtualization\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSystems with dual boot where a normal OS resides together with a type 1 hypervisor are an example of an hybrid approch.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSystems with dual boot where a normal OS resides together with a type 1 hypervisor are an example of how an hybrid approch works.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QWith device emulation the VMM proposes to the Guest OS an emulated device which implements in software an hardware specification.\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QLinux namespaces.\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QLinux namespaces are another kernel feature highly related to cgroups, although not being part of them.\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QLinux namespaces are another kernel feature, highly related to cgroups, although not being part of them.\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\Q[main] (1) \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (2) [below left of=1, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (3) [below right of=1, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (4) [below left of=2, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (5) [below left of=3, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (7) [below left of=5, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (6) [below right of=3, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\Q[rectangle, draw] (r2) at (6) [minimum width=50mm, minimum height=40mm, xshift=14mm, yshift=-32mm, fill=back2] ; [] (t2) at (r2.south) [yshift=4mm] Child PID namespace;\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\Q[main] (8) [below right of=6, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (9) [below left of=8, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q; [main] (10) [below right of=8, yshift=-5mm] \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q;\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\Q[rectangle, draw] (r1) at (5) [shift=(14mm, 0mm), minimum width=111mm, minimum height=108mm, fill=back1] ; [] (t1) at (r1.north) [yshift=-4mm] Parent PID namespace; PID namespace example\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QLinux containers.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qpage-tables.png 0.5 Memory paging\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qhav.png 0.35 Hardware assisted virtualization modes The VMM runs al ring 0 in root-mode, while guest OSs run at ring 0 in non-root mode.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdef.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.#1.\\E$"}
{"rule":"DOUBLE_PUNCTUATION","sentence":"^\\Q- #3..\\E$"}
{"rule":"E_G","sentence":"^\\Qeg.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qprob.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcodestyle.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qminicode.[1] =10000.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcode.[1] =10000.\\E$"}
{"rule":"MISSING_GENITIVE","sentence":"^\\QLinux containers can both be seen as infrastructure primitives (aka lightwieigth VMs) and an application management and configuration system.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdocker-network.png 0.4 Docker network setup\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qunion-file-system.png 0.4 Behaviour of a union file system\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qnetwork-tiers.png 0.4 Internet infrastructure\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qdata-center-traffic 0.5 Traffic within a data center\\E$"}
{"rule":"UNIT_SPACE","sentence":"^\\Q[rect] (4) [below left of=0, yshift=-20mm] Cache; [rect] (5) [right of=4, xshift=20mm] Cache; [rect] (6) [right of=5, xshift=20mm] Cache; [rect] (7) [right of=6, xshift=20mm] Cache;\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ;\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qin 0, 3, 6 in 1, ..., 4  clip(+3) = 1 [-] (a0) – (a0);  = 2 [-] (a-3) – (a-3);  = 3 [-] (a-6) – (a-6);  [-] (a-9) – (a-9);\\E$"}
{"rule":"THE_PUNCT","sentence":"^\\Q[empty] (a) [below of=0, yshift=3mm] ; [empty] (b) [right of=a, xshift=20mm] ; [empty] (c) [right of=b, xshift=20mm] ; [empty] (d) [right of=c, xshift=20mm] ; [empty] (e) [right of=d, xshift=10mm] ; [empty] (f) [left of=a, xshift=-10mm] ; [empty] (g) [above of=8, yshift=12.6mm] ; [empty] (h) [right of=g, xshift=20mm] ; [empty] (i) [right of=h, xshift=20mm] ; [empty] (j) [right of=i, xshift=20mm] ;\\E$"}
{"rule":"NON_STANDARD_WORD","sentence":"^\\Q[empty] (a) [below of=0, yshift=3mm] ; [empty] (b) [right of=a, xshift=20mm] ; [empty] (c) [right of=b, xshift=20mm] ; [empty] (d) [right of=c, xshift=20mm] ; [empty] (e) [right of=d, xshift=10mm] ; [empty] (f) [left of=a, xshift=-10mm] ; [empty] (g) [above of=8, yshift=12.6mm] ; [empty] (h) [right of=g, xshift=20mm] ; [empty] (i) [right of=h, xshift=20mm] ; [empty] (j) [right of=i, xshift=20mm] ;\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ;\\E$"}
{"rule":"THE_PUNCT","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ;\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qin 6,9 in 0,-3 [point] (c) at (, ) ; [rect] (r2) [below right of=c, shift=(-6mm, 6mm)] ; [point] (d) [below left of=c, shift=(2mm, 2mm)] ;\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qin 0, 3, 6, 9 in 0,-3, -6, -9 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qin 0, 3, 6, 9 in 0,-3, -6, -9 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"THE_PUNCT","sentence":"^\\Qin 0, 3, 6, 9 in 0,-3, -6, -9 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qin 0, 3, 6 in 1, ..., 4  clip(+3) = 1 [-] (a0) – (a0); [-] (a0) – (a-3);  = 2 [-] (a-3) – (a-3); [-] (a-3) – (a-6);  = 3 [-] (a-6) – (a-6); [-] (a-6) – (a-9);  [-] (a-9) – (a-9); [-] (a90) – (a9-3) – (a9-6) – (a9-9); [Torus topology]0.48 !\\E$"}
{"rule":"WHITESPACE_RULE","sentence":"^\\Qin 0, 3, 6 in 1, ..., 4  clip(+3) = 1 [-] (a0) – (a0); [-] (a0) – (a-3);  = 2 [-] (a-3) – (a-3); [-] (a-3) – (a-6);  = 3 [-] (a-6) – (a-6); [-] (a-6) – (a-9);  [-] (a-9) – (a-9); [-] (a90) – (a9-3) – (a9-6) – (a9-9);\\E$"}
{"rule":"ALLOW_TO","sentence":"^\\QOn the other hand, IP routing on layer 3 makes scalability easy thanks to hieranchical addressing and allows to obtain multipath routing with equal-cost multipath.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ; [rect] (r1) [below right of=b, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ; [rect] (r1) [below right of=b, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"THE_PUNCT","sentence":"^\\Qin 0,3 in 0,-3 [point] (a) at (, ) ; [rect] (r) [below right of=a, shift=(-6mm, 6mm)] ; [point] (b) [below left of=a, shift=(2mm, 2mm)] ; [rect] (r1) [below right of=b, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qin 6,9 in 0,-3 [point] (c) at (, ) ; [rect] (r2) [below right of=c, shift=(-6mm, 6mm)] ; [point] (d) [below left of=c, shift=(2mm, 2mm)] ; [rect] (r3) [below right of=d, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"NON_STANDARD_WORD","sentence":"^\\Qin 6,9 in 0,-3 [point] (c) at (, ) ; [rect] (r2) [below right of=c, shift=(-6mm, 6mm)] ; [point] (d) [below left of=c, shift=(2mm, 2mm)] ; [rect] (r3) [below right of=d, shift=(-6mm, 6mm)] ;\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfat-tree.png 0.6 Tipical fat tree topology\\E$"}
{"rule":"SUBJECT_VERB_AGREEMENT_PLURAL","sentence":"^\\QThis configuration results in an infrastructure that has \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q servers, actually, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q racks with \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q on-top-of-rack switches, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q switches and a total of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q paths connecting each pairs of servers.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtb-2.png 0.4\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qnsew-1.png 0.48\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qnsew-2.png 0.25\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QHost-based switching: using a virtual switch in the Hypervisor or directly in the Host OS; NIC switching: using virtual queues int the NIC; Haipin switching: passing through the external switch; nsew-3-ways.png 0.48\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qnsew-2.png 0.45\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qnsew-3.png 0.48\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtraditional-network-2.png 0.4 bridged-network.png 0.4 Traditional VS bridged network\\E$"}
{"rule":"CD_NN","sentence":"^\\QLinuxbridge drivers behaves as a traditional hardware bridge, so they can handle complex situations in which, for instance, hosts on the same physical domain (layer 2 network) resides both on the same host and outside it.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qovs.png 1 Open vSwitch general implementation schema\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qmulti-tenancy.png 0.4 Multi-tenancy\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtenant-defined-network-services.png 0.4 Tenant-defined network services\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qvirtual-and-host-services.png 0.4 Virtual and host services co-existence\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qtenant-defined-network-services.png 0.3 Tenant-defined network services\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qvirtual-and-host-services.png 0.3 Virtual and host services co-existence\\E$"}
{"rule":"FIRST_OF_ALL","sentence":"^\\QFirst of all, we have to distinguish between tenant and cloud manager view.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer2.png 0.8 Characteristics required by a layer 2 connectivity\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\QvTUN0 is the interface associated with the tunnel and its remote IP tells what is the IP to which that packet has to be sent.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer3-t-details-2.png 0.8\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer3.png 0.8 Characteristics required by layer 3 connectivity\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer2.png 0.8 Characteristics required by layer 2 connectivity\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer-3-dr-2.png 0.8\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qlayer-4.png 0.5 VxLAN network\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QIn this situation NAT isn't necessary because the resulting packet looks like a packet sent by an host application.\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QAPI Description API Description fd File descriptor dfh The directory when the file handle can be found fh File handle count Number of bytes to be transferred fname File name buf Buffer used to transfer data dname Directory name device The device in which the file system is located\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QAPI Description API Description fd File descriptor dfh The directory when the file handle can be found fh File handle count Number of bytes to be transferred fname File name buf Buffer used to transfer data dname Directory name device The device in which the file system is located NFS APIs\\E$"}
{"rule":"MISSING_TO_BETWEEN_BE_AND_VB","sentence":"^\\QDesign consideration Design choice Vast majority of files range in size from a few GBs to hundreds of TBs Files are segmented in large chunks Most common operation is to append to an existing file and random write operations to a file are extremely infrequent Implement an atomic file append operation allowing multiple applications operating concurrently to append to the same file Consistency model should be relaxed to simplify the system implementation but without placing an additional burden on the application developers Ensure consistency by channeling critical file operations through a master, a component of the cluster which controls the entire system\\E$"}
{"rule":"FIRST_OF_ALL","sentence":"^\\QFirst of all, the client contacts a master which replies with the location of the primary and secondary replicas, that is, the master replies with the ID of the chuck servers that hold the required chunk.\\E$"}
{"rule":"THE_SUPERLATIVE","sentence":"^\\QThen, the client sends data to all chunk servers holding replicas and each one of them, puts changes, aka modifications, in a least recently used buffer\\E$"}
{"rule":"THE_SUPERLATIVE","sentence":"^\\QThen, the client sends data to all chunk servers holding replicas and each one of them, puts changes, aka modifications, in a least recently used buffer and sends an acknowledgement back to the client.\\E$"}
{"rule":"THE_SUPERLATIVE","sentence":"^\\QThen, the client sends data to all chunk servers holding replicas, starting from the closer to the furthest, and each one of them puts changes, aka modifications, in a least recently used buffer and sends an acknowledgement back to the client.\\E$"}
{"rule":"A_INFINITIVE","sentence":"^\\QA read request is simpler than a write one.\\E$"}
{"rule":"PHRASE_REPETITION","sentence":"^\\QAPI Description API Description fd File descriptor dfh The directory in which the file handle can be found fh File handle count Number of bytes to be transferred fname File name buf Buffer used to transfer data dname Directory name device The device in which the file system is located NFS APIs\\E$"}
{"rule":"FIRST_OF_ALL","sentence":"^\\QFirst of all, the client contacts the master which replies with the location of the primary and secondary replicas, that is, the master replies with the ID of the chuck servers that hold the required chunk.\\E$"}
{"rule":"EN_COMPOUNDS","sentence":"^\\QIt is not a relational database, but a sparse, distributed, persistent multi-dimensional sorted map (key/value store).\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QThis is a five-steps procedure: The master grabs a unique master lock in Chubby to prevent concurrent master instantiations; It scans the servers directory in Chubby to find all live tablet servers;\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QThis is a five-steps procedure: The master grabs a unique master lock in Chubby to prevent concurrent master instantiations; It scans the servers directory in Chubby to find all live tablet servers; It communicates with every live tablet servers to discover what tablets are already assigned to each server\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QThis is a five-steps procedure: The master grabs a unique master lock in Chubby to prevent concurrent master instantiations; It scans the servers directory in Chubby to find all live tablet servers; It communicates with every live tablet server to discover what tablets are already assigned to each server; It adds the root tablet to the set of unassigned tablets if an assignment for it wasn't previuosly discovered; Finally, the master scans the metadata tablet to learn the complete set of tablets and eventually detect unassigned ones;\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QThis is a five-steps procedure: The master grabs a unique master lock in Chubby to prevent concurrent master instantiations; It scans the servers directory in Chubby to find all live tablet servers; It communicates with every live tablet server to discover what tablets are already assigned to each server; It adds the root tablet to the set of unassigned tablets if an assignment for it wasn't previuosly discovered; Finally, the master scans the METADATA tablet to learn the complete set of tablets and eventually detect unassigned ones;\\E$"}
{"rule":"THE_SUPERLATIVE","sentence":"^\\QThen, the client sends data to all chunk servers holding replicas, starting from the closest to the furthest, and each one of them puts changes, aka modifications, in a least recently used buffer and sends an acknowledgement back to the client.\\E$"}
{"rule":"SO_AS_TO","sentence":"^\\QReplicas inside each partition are isolated in as many distinct regions, zones, servers and devices as possible so as to reduce failure domains.\\E$"}
{"rule":"SO_AS_TO","sentence":"^\\QReplicas inside each partition are isolated in as many distinct regions, zones, servers and devices as possible, so as to reduce failure domains.\\E$"}
{"rule":"COMMA_COMPOUND_SENTENCE_2","sentence":"^\\QPractically, userland code writes the address of the targeted kernel routine in a specific register, then SYSENTER is called and the kernel jumps to the selected routine reading the address from the register without additional accesses to memory.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QWith device emulation the VMM proposes to Guest OSs an emulated device for which it implements in software an hardware specification.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\QvTUN0 is the interface associated with the tunnel and its remote IP defines the destination address for that packet.\\E$"}
{"rule":"MISSING_TO_BETWEEN_BE_AND_VB","sentence":"^\\QDesign consideration Design choice Vast majority of files range in size from a few GBs to hundreds of TBs Files are segmented in large chunks Most common operation is to append to an existing file and random write operations to a file are extremely infrequent Implement an atomic file append operation allowing multiple applications operating concurrently to append to the same file Consistency model should be relaxed to simplify the system implementation but without placing an additional burden on application developers Ensure consistency by channeling critical file operations through a master, a component of the cluster which controls the entire system\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QThis is a five-steps procedure: The master grabs a unique master lock in Chubby to prevent concurrent master instantiations; It scans the servers directory in Chubby to find all live tablet servers; It communicates with every live tablet server to discover what tablets are already assigned to each server; It adds the root tablet to the set of unassigned tablets, if an assignment for it wasn't previuosly discovered; Finally, the master scans the METADATA tablet to learn the complete set of tablets and eventually detect unassigned ones;\\E$"}
